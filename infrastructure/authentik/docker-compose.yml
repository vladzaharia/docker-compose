version: '3.8'

services:
  postgres:
    image: postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 10s
      interval: 5s
      retries: 5
      timeout: 5s
    env_file:
      - docker-compose.postgres.env
    volumes:
      - /data/authentik/postgres:/var/lib/postgres/data
    networks:
      - pgadmin
      - authentik
    labels:
      - com.centurylinklabs.watchtower.monitor-only=true
  redis:
    image: redis
    restart: unless-stopped
    healthcheck:
      test: 'redis-cli -a "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}" ping | grep PONG'
      start_period: 10s
      interval: 5s
      retries: 5
      timeout: 3s
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - docker-compose.redis.env
    volumes:
      - /data/authentik/redis:/data
    networks:
      - authentik
    labels:
      - com.centurylinklabs.watchtower.monitor-only=true

  server:
    image: ghcr.io/goauthentik/server:latest
    restart: unless-stopped
    command: server
    depends_on:
      - postgres
      - redis
    volumes:
      - /data/authentik/media:/media
      - /data/authentik/custom-templates:/templates
    env_file:
      - docker-compose.authentik.env
    networks:
      - authentik
      - traefik
      - homepage
    labels:
      - com.centurylinklabs.watchtower.monitor-only=true
      - traefik.enable=true
      - traefik.http.routers.authentik.entrypoints=websecure
      - traefik.http.routers.authentik.rule=Host(`auth.zhr.one`)
      - traefik.http.routers.authentik.tls.certresolver=acme
      - traefik.http.services.authentik.loadbalancer.server.port=9000
      - homepage.group=Infrastructure
      - homepage.name=Authentik
      # - homepage.icon=emby.png
      - homepage.href=https://auth.zhr.one/
      - homepage.description=Multi-protocol authentication service
      - homepage.widget.type=authentik
      - homepage.widget.url=http://authentik-server-1:9000
      - homepage.widget.key=${AUTHENTIK_API_TOKEN}

  worker:
    image: ghcr.io/goauthentik/server:latest
    restart: unless-stopped
    command: worker
    depends_on:
      - postgres
      - redis
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/authentik/media:/media
      - /data/authentik/certs:/certs
      - /data/authentik/custom-templates:/templates
    env_file:
      - docker-compose.authentik.env
    networks:
      - authentik
    labels:
      - com.centurylinklabs.watchtower.monitor-only=true
      
networks:
  pgadmin:
    name: pgadmin
    external: true
  traefik:
    name: traefik
    external: true
  homepage:
    name: homepage
    external: true
  authentik:
    name: authentik
    ipam:
      driver: default
      config:
        - subnet: 172.20.5.0/24
          gateway: 172.20.5.254